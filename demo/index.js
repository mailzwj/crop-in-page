!function(x){function Q(Q){for(var F,U,B=Q[0],s=Q[1],n=Q[2],t=0,L=[];t<B.length;t++)U=B[t],e[U]&&L.push(e[U][0]),e[U]=0;for(F in s)Object.prototype.hasOwnProperty.call(s,F)&&(x[F]=s[F]);for(c&&c(Q);L.length;)L.shift()();return E.push.apply(E,n||[]),i()}function i(){for(var Q,F=0;F<E.length;F++){for(var U=E[F],B=!0,s=1;s<U.length;s++){var n=U[s];0!==e[n]&&(B=!1)}B&&(E.splice(F--,1),Q=t(t.s=U[0]))}return Q}var U={},e={index:0},E=[];function t(Q){if(U[Q])return U[Q].exports;var F=U[Q]={i:Q,l:!1,exports:{}};return x[Q].call(F.exports,F,F.exports,t),F.l=!0,F.exports}t.m=x,t.c=U,t.d=function(Q,F,U){t.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},t.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},t.t=function(F,Q){if(1&Q&&(F=t(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(t.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var B in F)t.d(U,B,function(Q){return F[Q]}.bind(null,B));return U},t.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return t.d(F,"a",F),F},t.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},t.p="";var F=window.webpackJsonp=window.webpackJsonp||[],B=F.push.bind(F);F.push=Q,F=F.slice();for(var s=0;s<F.length;s++)Q(F[s]);var c=B;E.push(["./example/index.js","common"]),i()}({"./dist/index.min.js":
/*!***************************!*\
  !*** ./dist/index.min.js ***!
  \***************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n!function (e, t) {\n  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, function () {\n  return function (e) {\n    var t = {};\n\n    function n(r) {\n      if (t[r]) return t[r].exports;\n      var o = t[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, r) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: r\n      });\n    }, n.r = function (e) {\n      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: "Module"\n      }), Object.defineProperty(e, "__esModule", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;\n      var r = Object.create(null);\n      if (n.r(r), Object.defineProperty(r, "default", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && "string" != typeof e) for (var o in e) {\n        n.d(r, o, function (t) {\n          return e[t];\n        }.bind(null, o));\n      }\n      return r;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, "a", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = "", n(n.s = 0);\n  }([function (e, t, n) {\n    "use strict";\n\n    function r(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    function o(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    n.r(t), n(1);\n\n    var i = function () {\n      function e() {\n        var t = this;\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");\n        }(this, e), o(this, "bindMouseMove", function (e) {\n          t.end = {\n            x: e.clientX,\n            y: e.clientY\n          }, t.clearRect();\n        }), o(this, "bindMouseUp", function (e) {\n          t.start = null, t.end = null, document.removeEventListener("mousemove", t.bindMouseMove, !1), document.removeEventListener("mouseup", t.bindMouseUp, !1);\n        }), o(this, "bindDrag", function (e) {\n          if (t.moveEnd = {\n            x: e.clientX,\n            y: e.clientY\n          }, t.resizerBounds) {\n            var n = t.resizeTarget,\n                r = t.moveEnd.x - t.moveStart.x,\n                o = t.moveEnd.y - t.moveStart.y;\n            t.moveStart = {\n              x: t.moveStart.x + r,\n              y: t.moveStart.y + o\n            };\n            var i = t.resizerBounds;\n            if (n.classList.contains("J_Archor")) switch (n.getAttribute("data-index")) {\n              case "0":\n                t.start = {\n                  x: i.x + r,\n                  y: i.y + o\n                }, t.end = {\n                  x: t.start.x + i.width - r,\n                  y: t.start.y + i.height - o\n                };\n                break;\n\n              case "2":\n                t.start = {\n                  x: i.x,\n                  y: i.y + o\n                }, t.end = {\n                  x: t.start.x + i.width + r,\n                  y: t.start.y + i.height - o\n                };\n                break;\n\n              case "5":\n                t.start = {\n                  x: i.x + r,\n                  y: i.y\n                }, t.end = {\n                  x: t.start.x + i.width - r,\n                  y: t.start.y + i.height + o\n                };\n                break;\n\n              case "7":\n                t.start = {\n                  x: i.x,\n                  y: i.y\n                }, t.end = {\n                  x: t.start.x + i.width + r,\n                  y: t.start.y + i.height + o\n                };\n                break;\n\n              case "1":\n                t.start = {\n                  x: i.x,\n                  y: i.y + o\n                }, t.end = {\n                  x: t.start.x + i.width,\n                  y: t.start.y + i.height - o\n                };\n                break;\n\n              case "6":\n                t.start = {\n                  x: i.x,\n                  y: i.y\n                }, t.end = {\n                  x: t.start.x + i.width,\n                  y: t.start.y + i.height + o\n                };\n                break;\n\n              case "3":\n                t.start = {\n                  x: i.x + r,\n                  y: i.y\n                }, t.end = {\n                  x: t.start.x + i.width - r,\n                  y: t.start.y + i.height\n                };\n                break;\n\n              case "4":\n                t.start = {\n                  x: i.x,\n                  y: i.y\n                }, t.end = {\n                  x: t.start.x + i.width + r,\n                  y: t.start.y + i.height\n                };\n            } else t.start = {\n              x: i.x + r,\n              y: i.y + o\n            }, t.end = {\n              x: t.start.x + i.width,\n              y: t.start.y + i.height\n            };\n            t.clearRect();\n          }\n        }), o(this, "bindDragEnd", function () {\n          t.moveStart = null, t.moveEnd = null, t.resizeTarget = null, document.removeEventListener("mousemove", t.bindDrag, !1), document.removeEventListener("mouseup", t.bindDragEnd, !1);\n        }), this.config = {\n          backgroundColor: "rgba(0, 0, 0, 0.3)"\n        };\n      }\n\n      var t, n;\n      return t = e, (n = [{\n        key: "init",\n        value: function value() {\n          this.createBox(), this.initEvent();\n        }\n      }, {\n        key: "createBox",\n        value: function value() {\n          var e = {\n            width: window.innerWidth,\n            height: window.innerHeight\n          },\n              t = document.createElement("div");\n          t.id = "J_CropperMain", t.className = "cropper-main";\n          var n = document.createElement("canvas");\n          n.className = "cropper-canvas", n.width = e.width, n.height = e.height, n.innerHTML = "您的浏览器暂不支持Canvas，推荐使用Chrome浏览器";\n          var r = document.createElement("div");\n          r.className = "cropper-resize", r.innerHTML = \'\\n            <span class="J_Archor archor" data-index="0"></span>\\n            <span class="J_Archor archor" data-index="1"></span>\\n            <span class="J_Archor archor" data-index="2"></span>\\n            <span class="J_Archor archor" data-index="3"></span>\\n            <span class="J_Archor archor" data-index="4"></span>\\n            <span class="J_Archor archor" data-index="5"></span>\\n            <span class="J_Archor archor" data-index="6"></span>\\n            <span class="J_Archor archor" data-index="7"></span>\\n        \';\n          var o = document.createElement("div");\n          o.className = "select-cropper-type", o.innerHTML = \'\\n            <input type="button" class="J_CropSelector cropper-btn cropper-fullpage" value="整页截图">\\n            <input type="button" class="J_CropSelector cropper-btn cropper-fullscreen" value="全屏截图">\\n            <input type="button" class="J_CropSelector cropper-btn cropper-select" value="框选区域">\\n        \', this.main = t, this.cropper = n, this.resizer = r, this.typeSelector = o, this.ctx = n.getContext("2d"), this.ctx.fillStyle = this.config.backgroundColor, this.ctx.fillRect(0, 0, e.width, e.height), t.appendChild(n), t.appendChild(r), t.appendChild(o), document.body.appendChild(t);\n        }\n      }, {\n        key: "clearRect",\n        value: function value() {\n          if (this.start && this.end) {\n            var e,\n                t,\n                n = this.end.x - this.start.x,\n                r = this.end.y - this.start.y,\n                o = Math.abs(n),\n                i = Math.abs(r);\n            e = n < 0 ? this.end.x : this.start.x, t = r < 0 ? this.end.y : this.start.y, this.resizerBounds = {\n              x: e,\n              y: t,\n              width: o,\n              height: i\n            }, this.ctx.clearRect(0, 0, this.cropper.width, this.cropper.height), this.ctx.fillRect(0, 0, this.cropper.width, this.cropper.height), this.ctx.clearRect(e, t, o, i), this.resizer.style.top = t + "px", this.resizer.style.left = e + "px", this.resizer.style.width = o + "px", this.resizer.style.height = i + "px";\n          }\n        }\n      }, {\n        key: "destory",\n        value: function value() {\n          this.main && (this.main.parentNode.removeChild(this.main), this.main = null, this.cropper = null, this.ctx = null, this.resizer = null, this.typeSelector = null);\n        }\n      }, {\n        key: "crop",\n        value: function value(e) {\n          var t = [];\n\n          for (var n in e = e || {}) {\n            t.push(n + "=" + e[n]);\n          }\n\n          var r = new Image();\n          r.src = "http://39.96.76.88:3002/crop?".concat(t.join("&")), document.body.appendChild(r);\n        }\n      }, {\n        key: "initEvent",\n        value: function value() {\n          var e = this;\n          window.addEventListener("resize", function () {\n            e.destory();\n          }, !1), window.addEventListener("keyup", function (t) {\n            27 === t.keyCode && e.destory();\n          }, !1), this.main.addEventListener("mousedown", function (t) {\n            e.start = {\n              x: t.clientX,\n              y: t.clientY\n            }, document.addEventListener("mousemove", e.bindMouseMove, !1), document.addEventListener("mouseup", e.bindMouseUp, !1);\n          }, !1), this.resizer.addEventListener("mousedown", function (t) {\n            t.stopPropagation(), e.moveStart = {\n              x: t.clientX,\n              y: t.clientY\n            }, e.resizeTarget = t.target, document.addEventListener("mousemove", e.bindDrag, !1), document.addEventListener("mouseup", e.bindDragEnd, !1);\n          }, !1), this.typeSelector.addEventListener("click", function (t) {\n            var n = t.target;\n            if (n.classList.contains("J_CropSelector")) if (n.classList.contains("cropper-fullpage")) {\n              var r = {\n                src: encodeURIComponent(location.href),\n                renderWidth: window.innerWidth,\n                fullscreen: 1,\n                holdTime: 1\n              };\n              e.crop(r);\n            } else if (n.classList.contains("cropper-fullscreen")) {\n              var o = {\n                src: encodeURIComponent(location.href),\n                renderWidth: window.innerWidth,\n                x: document.body.scrollLeft,\n                y: document.body.scrollTop,\n                width: window.innerWidth,\n                height: window.innerHeight\n              };\n              e.crop(o);\n            } else e.main.className = "cropper-main select";\n          }, !1), this.resizer.addEventListener("dblclick", function (t) {\n            var n = document.body.scrollTop,\n                r = {\n              x: document.body.scrollLeft + e.resizerBounds.x,\n              y: n + e.resizerBounds.y,\n              width: e.resizerBounds.width,\n              height: e.resizerBounds.height,\n              src: encodeURIComponent(location.href),\n              holdTime: 1,\n              renderWidth: window.innerWidth\n            };\n            e.crop(r);\n          }, !1);\n        }\n      }]) && r(t.prototype, n), e;\n    }();\n\n    t.default = i;\n  }, function (e, t, n) {\n    var r = n(2);\n    "string" == typeof r && (r = [[e.i, r, ""]]);\n    n(4)(r, {\n      hmr: !0,\n      transform: void 0,\n      insertInto: void 0\n    }), r.locals && (e.exports = r.locals);\n  }, function (e, t, n) {\n    (e.exports = n(3)(!1)).push([e.i, \'.cropper-main {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 10000;\\n  width: 100%;\\n  height: 100%;\\n  font: 14px/1.5 \\\'PingFang SC\\\', \\\'Microsoft Yahei\\\', sans-serif;\\n  color: #333;\\n  overflow: hidden;\\n}\\n.cropper-main input {\\n  font: 14px/1.5 \\\'PingFang SC\\\', \\\'Microsoft Yahei\\\', sans-serif;\\n}\\n.cropper-main .select-cropper-type {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.3);\\n}\\n.cropper-main .select-cropper-type .cropper-btn {\\n  margin: 0 5px;\\n  padding: 10px 30px;\\n  font-size: 14px;\\n  border-radius: 30px;\\n  background-color: #fff;\\n  color: #333;\\n  outline: none;\\n  cursor: pointer;\\n}\\n.cropper-main .select-cropper-type .cropper-btn:hover {\\n  background-color: #f8f8f8;\\n}\\n.cropper-main .cropper-canvas {\\n  display: none;\\n}\\n.cropper-main .cropper-resize {\\n  display: none;\\n  position: absolute;\\n  top: -999px;\\n  left: -999px;\\n  width: 0;\\n  height: 0;\\n  box-sizing: border-box;\\n  border: 1px dashed #ddd;\\n  cursor: move;\\n}\\n.cropper-main .cropper-resize .archor {\\n  position: absolute;\\n  width: 4px;\\n  height: 4px;\\n  border: 1px solid #ddd;\\n  background-color: #fff;\\n}\\n.cropper-main .cropper-resize .archor[data-index="0"] {\\n  top: -3px;\\n  left: -3px;\\n  cursor: nwse-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="1"] {\\n  top: -3px;\\n  left: 50%;\\n  margin-left: -3px;\\n  cursor: n-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="2"] {\\n  top: -3px;\\n  right: -3px;\\n  cursor: nesw-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="3"] {\\n  top: 50%;\\n  left: -3px;\\n  margin-top: -3px;\\n  cursor: w-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="4"] {\\n  top: 50%;\\n  right: -3px;\\n  cursor: e-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="5"] {\\n  bottom: -3px;\\n  left: -3px;\\n  cursor: nesw-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="6"] {\\n  bottom: -3px;\\n  left: 50%;\\n  cursor: s-resize;\\n}\\n.cropper-main .cropper-resize .archor[data-index="7"] {\\n  right: -3px;\\n  bottom: -3px;\\n  cursor: nwse-resize;\\n}\\n.cropper-main.select .select-cropper-type {\\n  display: none;\\n}\\n.cropper-main.select .cropper-canvas,\\n.cropper-main.select .cropper-resize {\\n  display: block;\\n}\\n\', ""]);\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = [];\n      return t.toString = function () {\n        return this.map(function (t) {\n          var n = function (e, t) {\n            var n,\n                r = e[1] || "",\n                o = e[3];\n            if (!o) return r;\n\n            if (t && "function" == typeof btoa) {\n              var i = (n = o, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n)))) + " */"),\n                  s = o.sources.map(function (e) {\n                return "/*# sourceURL=" + o.sourceRoot + e + " */";\n              });\n              return [r].concat(s).concat([i]).join("\\n");\n            }\n\n            return [r].join("\\n");\n          }(t, e);\n\n          return t[2] ? "@media " + t[2] + "{" + n + "}" : n;\n        }).join("");\n      }, t.i = function (e, n) {\n        "string" == typeof e && (e = [[null, e, ""]]);\n\n        for (var r = {}, o = 0; o < this.length; o++) {\n          var i = this[o][0];\n          "number" == typeof i && (r[i] = !0);\n        }\n\n        for (o = 0; o < e.length; o++) {\n          var s = e[o];\n          "number" == typeof s[0] && r[s[0]] || (n && !s[2] ? s[2] = n : n && (s[2] = "(" + s[2] + ") and (" + n + ")"), t.push(s));\n        }\n      }, t;\n    };\n  }, function (e, t, n) {\n    var r,\n        o,\n        i,\n        s = {},\n        a = (r = function r() {\n      return window && document && document.all && !window.atob;\n    }, function () {\n      return void 0 === o && (o = r.apply(this, arguments)), o;\n    }),\n        c = (i = {}, function (e, t) {\n      if ("function" == typeof e) return e();\n\n      if (void 0 === i[e]) {\n        var n = function (e, t) {\n          return t ? t.querySelector(e) : document.querySelector(e);\n        }.call(this, e, t);\n\n        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {\n          n = n.contentDocument.head;\n        } catch (e) {\n          n = null;\n        }\n        i[e] = n;\n      }\n\n      return i[e];\n    }),\n        p = null,\n        d = 0,\n        l = [],\n        u = n(5);\n\n    function f(e, t) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n],\n            o = s[r.id];\n\n        if (o) {\n          o.refs++;\n\n          for (var i = 0; i < o.parts.length; i++) {\n            o.parts[i](r.parts[i]);\n          }\n\n          for (; i < r.parts.length; i++) {\n            o.parts.push(b(r.parts[i], t));\n          }\n        } else {\n          var a = [];\n\n          for (i = 0; i < r.parts.length; i++) {\n            a.push(b(r.parts[i], t));\n          }\n\n          s[r.id] = {\n            id: r.id,\n            refs: 1,\n            parts: a\n          };\n        }\n      }\n    }\n\n    function h(e, t) {\n      for (var n = [], r = {}, o = 0; o < e.length; o++) {\n        var i = e[o],\n            s = t.base ? i[0] + t.base : i[0],\n            a = {\n          css: i[1],\n          media: i[2],\n          sourceMap: i[3]\n        };\n        r[s] ? r[s].parts.push(a) : n.push(r[s] = {\n          id: s,\n          parts: [a]\n        });\n      }\n\n      return n;\n    }\n\n    function m(e, t) {\n      var n = c(e.insertInto);\n      if (!n) throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n      var r = l[l.length - 1];\n      if ("top" === e.insertAt) r ? r.nextSibling ? n.insertBefore(t, r.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild), l.push(t);else if ("bottom" === e.insertAt) n.appendChild(t);else {\n        if ("object" != _typeof(e.insertAt) || !e.insertAt.before) throw new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n        var o = c(e.insertAt.before, n);\n        n.insertBefore(t, o);\n      }\n    }\n\n    function y(e) {\n      if (null === e.parentNode) return !1;\n      e.parentNode.removeChild(e);\n      var t = l.indexOf(e);\n      0 <= t && l.splice(t, 1);\n    }\n\n    function v(e) {\n      var t = document.createElement("style");\n\n      if (void 0 === e.attrs.type && (e.attrs.type = "text/css"), void 0 === e.attrs.nonce) {\n        var r = n.nc;\n        r && (e.attrs.nonce = r);\n      }\n\n      return x(t, e.attrs), m(e, t), t;\n    }\n\n    function x(e, t) {\n      Object.keys(t).forEach(function (n) {\n        e.setAttribute(n, t[n]);\n      });\n    }\n\n    function b(e, t) {\n      var n, r, o, i, s, a;\n\n      if (t.transform && e.css) {\n        if (!(i = "function" == typeof t.transform ? t.transform(e.css) : t.transform.default(e.css))) return function () {};\n        e.css = i;\n      }\n\n      if (t.singleton) {\n        var c = d++;\n        n = p || (p = v(t)), r = L.bind(null, n, c, !1), o = L.bind(null, n, c, !0);\n      } else o = e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (s = t, a = document.createElement("link"), void 0 === s.attrs.type && (s.attrs.type = "text/css"), s.attrs.rel = "stylesheet", x(a, s.attrs), m(s, a), r = function (e, t, n) {\n        var r = n.css,\n            o = n.sourceMap,\n            i = void 0 === t.convertToAbsoluteUrls && o;\n        (t.convertToAbsoluteUrls || i) && (r = u(r)), o && (r += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */");\n        var s = new Blob([r], {\n          type: "text/css"\n        }),\n            a = e.href;\n        e.href = URL.createObjectURL(s), a && URL.revokeObjectURL(a);\n      }.bind(null, n = a, t), function () {\n        y(n), n.href && URL.revokeObjectURL(n.href);\n      }) : (n = v(t), r = function (e, t) {\n        var n = t.css,\n            r = t.media;\n        if (r && e.setAttribute("media", r), e.styleSheet) e.styleSheet.cssText = n;else {\n          for (; e.firstChild;) {\n            e.removeChild(e.firstChild);\n          }\n\n          e.appendChild(document.createTextNode(n));\n        }\n      }.bind(null, n), function () {\n        y(n);\n      });\n\n      return r(e), function (t) {\n        if (t) {\n          if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;\n          r(e = t);\n        } else o();\n      };\n    }\n\n    e.exports = function (e, t) {\n      if ("undefined" != typeof DEBUG && DEBUG && "object" != (typeof document === "undefined" ? "undefined" : _typeof(document))) throw new Error("The style-loader cannot be used in a non-browser environment");\n      (t = t || {}).attrs = "object" == _typeof(t.attrs) ? t.attrs : {}, t.singleton || "boolean" == typeof t.singleton || (t.singleton = a()), t.insertInto || (t.insertInto = "head"), t.insertAt || (t.insertAt = "bottom");\n      var n = h(e, t);\n      return f(n, t), function (e) {\n        for (var r = [], o = 0; o < n.length; o++) {\n          var i = n[o];\n          (a = s[i.id]).refs--, r.push(a);\n        }\n\n        for (e && f(h(e, t), t), o = 0; o < r.length; o++) {\n          var a;\n\n          if (0 === (a = r[o]).refs) {\n            for (var c = 0; c < a.parts.length; c++) {\n              a.parts[c]();\n            }\n\n            delete s[a.id];\n          }\n        }\n      };\n    };\n\n    var g,\n        w = (g = [], function (e, t) {\n      return g[e] = t, g.filter(Boolean).join("\\n");\n    });\n\n    function L(e, t, n, r) {\n      var o = n ? "" : r.css;\n      if (e.styleSheet) e.styleSheet.cssText = w(t, o);else {\n        var i = document.createTextNode(o),\n            s = e.childNodes;\n        s[t] && e.removeChild(s[t]), s.length ? e.insertBefore(i, s[t]) : e.appendChild(i);\n      }\n    }\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = "undefined" != typeof window && window.location;\n      if (!t) throw new Error("fixUrls requires window.location");\n      if (!e || "string" != typeof e) return e;\n      var n = t.protocol + "//" + t.host,\n          r = n + t.pathname.replace(/\\/[^\\/]*$/, "/");\n      return e.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (e, t) {\n        var o,\n            i = t.trim().replace(/^"(.*)"$/, function (e, t) {\n          return t;\n        }).replace(/^\'(.*)\'$/, function (e, t) {\n          return t;\n        });\n        return /^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i) ? e : (o = 0 === i.indexOf("//") ? i : 0 === i.indexOf("/") ? n + i : r + i.replace(/^\\.\\//, ""), "url(" + JSON.stringify(o) + ")");\n      });\n    };\n  }]);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/index.min.js\n')},"./example/index.js":
/*!**************************!*\
  !*** ./example/index.js ***!
  \**************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ */ "./dist/index.min.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.less */ "./example/index.less");\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n // console.log(CropInPage);\n\nvar Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo() {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "startCrop", function (ev) {\n      _this.cropper.init();\n    });\n\n    _this.state = {//\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var cip = new ___WEBPACK_IMPORTED_MODULE_2___default.a(); // cip.init();\n\n      this.cropper = cip;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "cw",\n        id: "J_CW"\n      }, "Demo", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", {\n        type: "button",\n        value: "\\u622A\\u56FE",\n        onClick: this.startCrop\n      }));\n    }\n  }]);\n\n  return Demo;\n}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);\n\nvar page = document.createElement(\'div\');\npage.style.height = \'100%\';\ndocument.body.appendChild(page);\nObject(react_dom__WEBPACK_IMPORTED_MODULE_1__["render"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Demo, null), page);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4LmpzP2M1MTIiXSwibmFtZXMiOlsiRGVtbyIsImV2IiwiY3JvcHBlciIsImluaXQiLCJzdGF0ZSIsImNpcCIsIkNyb3BJblBhZ2UiLCJzdGFydENyb3AiLCJDb21wb25lbnQiLCJwYWdlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJoZWlnaHQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJyZW5kZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0NBSUE7O0lBRU1BLEk7Ozs7O0FBQ0Ysa0JBQWM7QUFBQTs7QUFBQTs7QUFDVjs7QUFEVSx3RkFhRixVQUFDQyxFQUFELEVBQVE7QUFDaEIsWUFBS0MsT0FBTCxDQUFhQyxJQUFiO0FBQ0gsS0FmYTs7QUFFVixVQUFLQyxLQUFMLEdBQWEsQ0FDVDtBQURTLEtBQWI7QUFGVTtBQUtiOzs7O3dDQUVtQjtBQUNoQixVQUFNQyxHQUFHLEdBQUcsSUFBSUMsd0NBQUosRUFBWixDQURnQixDQUVoQjs7QUFDQSxXQUFLSixPQUFMLEdBQWVHLEdBQWY7QUFDSDs7OzZCQU1RO0FBQ0wsYUFDSTtBQUFLLGlCQUFTLEVBQUMsSUFBZjtBQUFvQixVQUFFLEVBQUM7QUFBdkIsaUJBRUk7QUFBTyxZQUFJLEVBQUMsUUFBWjtBQUFxQixhQUFLLEVBQUMsY0FBM0I7QUFBZ0MsZUFBTyxFQUFFLEtBQUtFO0FBQTlDLFFBRkosQ0FESjtBQU1IOzs7O0VBekJjQywrQzs7QUE0Qm5CLElBQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWI7QUFDQUYsSUFBSSxDQUFDRyxLQUFMLENBQVdDLE1BQVgsR0FBb0IsTUFBcEI7QUFDQUgsUUFBUSxDQUFDSSxJQUFULENBQWNDLFdBQWQsQ0FBMEJOLElBQTFCO0FBRUFPLHdEQUFNLENBQUMsMkRBQUMsSUFBRCxPQUFELEVBQVdQLElBQVgsQ0FBTiIsImZpbGUiOiIuL2V4YW1wbGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IENyb3BJblBhZ2UgZnJvbSAnLi4vJztcblxuaW1wb3J0ICcuL2luZGV4Lmxlc3MnO1xuXG4vLyBjb25zb2xlLmxvZyhDcm9wSW5QYWdlKTtcblxuY2xhc3MgRGVtbyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICAvL1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBjb25zdCBjaXAgPSBuZXcgQ3JvcEluUGFnZSgpO1xuICAgICAgICAvLyBjaXAuaW5pdCgpO1xuICAgICAgICB0aGlzLmNyb3BwZXIgPSBjaXA7XG4gICAgfVxuXG4gICAgc3RhcnRDcm9wID0gKGV2KSA9PiB7XG4gICAgICAgIHRoaXMuY3JvcHBlci5pbml0KCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjd1wiIGlkPVwiSl9DV1wiPlxuICAgICAgICAgICAgICAgIERlbW9cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImJ1dHRvblwiIHZhbHVlPVwi5oiq5Zu+XCIgb25DbGljaz17dGhpcy5zdGFydENyb3B9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IHBhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnBhZ2Uuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYWdlKTtcblxucmVuZGVyKDxEZW1vIC8+LCBwYWdlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./example/index.js\n')},"./example/index.less":
/*!****************************!*\
  !*** ./example/index.less ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../node_modules/css-loader!../node_modules/less-loader/dist/cjs.js!./index.less */ "./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/ZTYxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLHdMQUE0Rjs7QUFFbEgsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLG1HQUFnRDs7QUFFckU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiLi9leGFtcGxlL2luZGV4Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4Lmxlc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./example/index.less\n')},"./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js!./example/index.less ***!
  \*********************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, "html,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n  font: 14px/1.5 \\"\\\\5FAE\\\\8F6F\\\\96C5\\\\9ED1\\", sans-serif;\\n}\\nbody {\\n  margin: 0;\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/MzYyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyw2RkFBNEM7QUFDL0U7OztBQUdBO0FBQ0EsY0FBYyxRQUFTLGdCQUFnQixnQkFBZ0IsaUJBQWlCLDREQUE0RCxHQUFHLFFBQVEsY0FBYyxHQUFHOztBQUVoSyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZXhhbXBsZS9pbmRleC5sZXNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLFxcbmJvZHkge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBmb250OiAxNHB4LzEuNSBcXFwiXFxcXDVGQUVcXFxcOEY2RlxcXFw5NkM1XFxcXDlFRDFcXFwiLCBzYW5zLXNlcmlmO1xcbn1cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less\n')}});